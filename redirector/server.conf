
upstream web {
  keepalive 16;
  server 127.0.0.1:5000 max_fails=5 fail_timeout=30s;
}

server {
  listen 80;
  server_name 127.0.0.1;
  charset utf-8;

  location ~*  \.(jpe?g|png|gif|ico|css|js|ttf|otf|eot|woff)$ {
    proxy_pass http://web;
  }

  location = / {
    proxy_pass http://web;
  }

  location ~ ^/(?<key>[^/]+)$ {
    rewrite_by_lua '
      local red = redis:new()
      red:set_timeout(1000)

      local ok, err = red:connect("127.0.0.1", 6379)
      if not ok then
        ngx.say("failed to connect: ", err)
        return
      end

      local redirectUrl = red:get(ngx.var.key)
      if redirectUrl ~= ngx.null then
        red:expireat(ngx.var.key, os.time() + 1209600) -- extend key two weeks
        return ngx.redirect(redirectUrl)
      else
        return ngx.redirect("/")
      end
    ';
  }
}
